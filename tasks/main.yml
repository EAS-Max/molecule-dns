---
# tasks file for dns
- name: debug hostvars
  debug: var=hostvars['max-dhcp'].ansible_all_ipv4_addresses[1]

- name: debug hostvars
  debug: var=gateway_ip

- name: debug hostvars
  debug: var=dhcp_ip

- name: refresh subscription manager
  command: subscription-manager refresh

- name: set resolv.conf
  blockinfile:
    marker: ";from ansible"
    dest: /etc/resolv.conf
    block: |
      DNS={{ dns }}
      FallbackDNS=8.8.8.8
      Domains="{{ domain }}.{{ domain_area }}"

    insertafter: EOF
    create: yes

# - name: debug hostvars
#   debug: var=hostvars['{{ domain }}-dns'].ansible_all_ipv4_addresses[1]

# - name: debug hostvars
#   debug: var=hostvars['{{ domain }}-dns']

- name: set network-scripts
  blockinfile:
    marker: "#from ansible"
    dest: /etc/sysconfig/network-scripts/ifcfg-ens224
    block: |
      DEFROUTE=yes
      DNS1={{ dns }}
      DOMAIN="{{ domain }}.{{ domain_area }}"

    insertafter: EOF
    create: yes

- name: Install bind
  ansible.builtin.yum:
    name: bind
    state: latest

- name: Install bind-utils
  ansible.builtin.yum:
    name: bind-utils
    state: latest

# - name: enable named service
#   service:
#     name: named
#     state: enabled

- name: start named service
  service:
    name: named
    state: started
    enabled: yes

# - name: restart named service
#   service:
#     name: named
#     state: restarted

# - name: set network-scripts
#   blockinfile:
#     dest: /var/named/{{ domain }}.{{ domain_area }}.db
#     block: |
#       @  IN  SOA    dns-primary.{{ domain }}.{{ domain_area }}. root.{{ domain }}.{{ domain_area }}. (
#       1001    ;Serial
#       3H      ;Refresh
#       15M     ;Retry
#       1W      ;Expire
#       1D      ;Minimum TTL
#       )
#       ;Name Server Information
#       @ IN  NS      dns-primary.{{ domain }}.{{ domain_area }}.
#       ;Reverse lookup for Name Server
#       100 IN PTR dns-primary.{{ domain }}.{{ domain_area }}.
#       ;PTR Record IP address to HostName
#       {{ hostvars['{{ domain }}-dns'].ansible_all_ipv4_addresses[1] }} IN PTR app3
#       10.0.0.1 IN PTR app1
#       10.0.0.2 IN PTR app5
#       10.0.0.11 IN PTR app4
#       10.0.0.10 IN PTR app2
#       192.168.1.136 IN PTR app6
#       gateway IN A 10.0.0.1

#     insertafter: EOF
#     create: yes

- name: set network-scripts
  blockinfile:
    marker: ";from ansible"
    dest: /var/named/{{ domain }}.{{ domain_area }}.db
    block: |
      $TTL 86400
      @ IN SOA dns-primary.{{ domain }}.{{ domain_area }}. admin.{{ domain }}.{{ domain_area }}. (
            2019061800 ;Serial
            3600 ;Refresh
            1800 ;Retry
            604800 ;Expire
            86400 ;Minimum TTL
      )
      ;Name Server Information
      @ IN NS dns-primary.{{ domain }}.{{ domain_area }}.
      ;IP for Name Server
      dns-primary IN A {{ dns }}
      ;A Record for IP address to Hostname 
      dhcp IN A {{ dhcp_ip }}
      gateway IN A {{ gateway_ip }}
    insertafter: EOF
    create: yes

- name: delete file named.conf
  ansible.builtin.file:
    path: /etc/named.conf
    state: absent

- name: set named config
  blockinfile:
    marker: "//from ansible"
    dest: /etc/named.conf
    block: |
      options {
        directory     "/var/named";
        dump-file      "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file  "/var/named/data/named_mem_stats.txt";
        secroots-file    "/var/named/data/named.secroots";
        recursing-file "/var/named/data/named.recursing";
        allow-query {localhost;10.0.0.0/24;};
        
        recursion yes;
        dnssec-enable yes;
        dnssec-validation yes;
        
        managed-keys-directory "/var/named/dynamic";
        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";
      };

      logging {
        channel default_debug {
          file "data/named.run";
          severity dynamic;
        };
      };

      zone "{{ domain }}.{{ domain_area }}" IN {
        type master;
        file "/var/named/{{ domain }}.{{ domain_area }}.db";
        allow-update { none; };
      };

      zone "0.0.10.in-addr.arpa" IN {
        type master;
        file "/var/named/{{ domain }}.{{ domain_area }}.rev";
        allow-update { none; };
      };

      include "/etc/named.rfc1912.zones";
      include "/etc/named.root.key";

    insertafter: EOF
    create: yes

- name: "writting the rev file /var/named/{{ domain }}.{{ domain_area }}.rev"
  blockinfile:
    dest: /var/named/{{ domain }}.{{ domain_area }}.rev
    insertafter: EOF
    marker: ";from ansible"
    create: yes
    block: |
      $TTL 86400
      @ IN SOA dns-primary.{{ domain }}.{{ domain_area }}. admin.{{ domain }}.{{ domain_area }}. (
          2019061800 ;Serial
          3600 ;Refresh
          1800 ;Retry
          604800 ;Expire
          86400 ;Minimum TTL
      )
      ;Name Server Information
      @ IN NS dns-primary.{{ domain }}.{{ domain_area }}.
      ;Reverse lookup for Name Server
      2 IN PTR dns-primary.{{ domain }}.{{ domain_area }}.
      ;PTR Record IP address to HostName
      3 IN PTR dhcp.{{ domain }}.{{ domain_area }}.
      1 IN PTR gateway.{{ domain }}.{{ domain_area }}.

- name: Change ownership for db
  ansible.builtin.file:
    path: /var/named/{{ domain }}.{{ domain_area }}.rev
    group: named

- name: Change ownership for db
  ansible.builtin.file:
    path: /var/named/{{ domain }}.{{ domain_area }}.db
    group: named

- name: checkconf command
  command: named-checkconf

- name: add the .rev files to the checkzone
  command: named-checkzone {{ dns }} /var/named/{{ domain }}.{{ domain_area }}.rev

- name: add domain files to the checkzone
  command: named-checkzone {{ domain }}.{{ domain_area }} /var/named/{{ domain }}.{{ domain_area }}.db

- name: restart named
  service:
    name: named
    state: restarted

- name: Add dns service permanent
  ansible.posix.firewalld:
    service: dns
    permanent: yes
    state: enabled

- name: reloading firewalld
  service:
    name: firewalld
    state: restarted

- name: network manager
  service:
    name: NetworkManager
    state: restarted
# - name: dns service
#   service:
#     name: dns
#     state: started
